//
//  PrefixHeader.pch
//  APIDemo
//
//  Created by Chan on 2018/6/20.
//  Copyright © 2018年 Chan. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#import <UIKit/UIKit.h>
#import <AVFoundation/AVFoundation.h>
#import <Foundation/Foundation.h>
#import "KSCaptureConfig.h"
#import "KSAVFoundationManager.h"
#import "KSMotionManager.h"
#import "KSCaptureTool.h"
#import <LKDBHelper/LKDBHelper.h>
#import <AFNetworking/AFNetworking.h>
#import "HttpClient.h"
#import <SDWebImage/UIImageView+WebCache.h>
#import <UMCommon/UMCommon.h>
#import <UMShare/UMShare.h>
#import <TZImagePickerController/TZImagePickerController.h>
#import "NetTool.h"
#import <SVProgressHUD/SVProgressHUD.h>
#import <UMShare/UMShare.h>
#import <UShareUI/UShareUI.h>
#import <WXApi.h>
#import <CocoaAsyncSocket/GCDAsyncSocket.h>
#import <LCProgressHUD/LCProgressHUD.h>
#import <MJRefresh/MJRefresh.h>
#import <ReactiveCocoa/ReactiveCocoa.h>
#import <EBBannerView/EBBannerView.h>
#import <WeiboSDK.h>
#import <JPUSHService.h>
#import <CYTabBar/CYTabBar.h>
#import <CYTabBar/CYTabBarController.h>

#import "kInitUI.h"
#import <MJExtension/MJExtension.h>

#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define kScreenHeight [UIScreen mainScreen].bounds.size.height
#define kJPushKey @"aebc3d6b31f1120ec7e4add8"

#import "NotificationView.h"
#define kColorWhite [UIColor whiteColor]
#define kColorClear [UIColor clearColor]
#define kColorRed [UIColor redColor]
#define kColorBlue [UIColor blueColor]
#define kColorGreen [UIColor greenColor]
#define kColorBlack [UIColor blackColor]
#define kColorGray [UIColor grayColor]
#define kColorLightGray [UIColor lightGrayColor]
#define kColorOrange [UIColor orangeColor]
#define kRandomColor [UIColor colorWithRed:arc4random_uniform(255)/255.0 green:arc4random_uniform(255)/255.0 blue:arc4random_uniform(255)/255.0 alpha:1]
#define kColor(R,G,B)  [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:1]
#define UIColorHex(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]
// 设置颜色与透明度 示例：UIColorHEX_Alpha(0x26A7E8, 0.5)
#define UIColorHex_Alpha(rgbValue, al) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:al]
// 设置颜色 示例：UIColorHexStr(@"#7b7b7b");
#define UIColorHexStr(hex)     [DataHelper colorWithHexString:hex]

#define kIMAGE(XXX) [[UIImage imageNamed:XXX] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]
#define kIsiPhoneX [UIScreen mainScreen].bounds.size.height==812
#define iPhoneX_BOTTOM_HEIGHT  ([UIScreen mainScreen].bounds.size.height==812?34:0)
#define kVideosFilePath     [kDocumentPath stringByAppendingString:@"/videos"]
#define kAudiosFilePath     [kDocumentPath stringByAppendingString:@"/audios"]

#define kAppKey @"5b0660aeb27b0a0f95000033"
#define kAppSecrectKey @"70e930b4ef1a7a2e2bdead85aafda8c2"


#define kWeChatKey @"wxb5ce10e9f77b3f69"
#define kWeChatSecrectKey @"e93e830ef213f1ed025643fd531f1ef8"

#define kSinaAppKey @"wb1785244603"
#define kSinaAppSecretKey @"08c85dc66729516fda44d0264c2d17b6"

#define kDocumentPath NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES).lastObject
#define kUserDefaults [NSUserDefaults standardUserDefaults]

// MARK: - CG_INLINE method
CG_INLINE UIColor *UIColorRGB(float R,float G,float B) {
    return [UIColor colorWithRed:R/255.0
                           green:G/255.0
                            blue:B/255.0
                           alpha:1.0];
}

CG_INLINE void kUserDefaultSet(id value,NSString *key) {
    [kUserDefaults setObject:value forKey:key];
    [kUserDefaults synchronize];
}

CG_INLINE id  kUserDefaultsForKey(NSString * key) {
    return [kUserDefaults objectForKey:key];
}

CG_INLINE NSString *kAppVersion() {
    return [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"];
}

CG_INLINE NSURL *kURL(NSString *urlStr) {
    return [NSURL URLWithString:urlStr];
}

// MARK: - 判断是否空
CG_INLINE BOOL kEmpty(id value) {
    if ([value isKindOfClass:[NSNull class]] || value == nil) {
        return YES;
    } else if ([value isKindOfClass:[NSString class]]) {
        return [value isEqualToString:@""] || [[value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] length] == 0;
    }else if ([value isKindOfClass:[NSArray class]]) {
        return [(NSArray *)value count] == 0;
    }else if ([value isKindOfClass:[NSDictionary class]]) {
        return [(NSDictionary *)value count] == 0;
    } else {
        return YES;
    }
}

// MARK: - 转json 
CG_INLINE id kJson(id value) {
    id resultValue = nil;
    if ([value isKindOfClass:[NSString class]]) {
        resultValue = [NSJSONSerialization JSONObjectWithData:[((NSString *)value) dataUsingEncoding:NSUTF8StringEncoding] options:NSJSONReadingMutableLeaves error:nil];
        
    } else if ([value isKindOfClass:[NSData class]]) {
        resultValue = [NSJSONSerialization JSONObjectWithData:((NSData *)value) options:NSJSONReadingMutableLeaves error:nil];
    }
    return resultValue == nil?  @{}:resultValue;
}

#define iToastText(xxx)     [LCProgressHUD showMessage:xxx]
#define iToastLoding     [LCProgressHUD showLoading:@""]
#define iToastHide [LCProgressHUD hide]
#define kBaseURL @"http://www.baidu.com"
#define kAppID @"AppID"

// MARK: - Thread method
#define dispatch_main_sync_safe(block)\
if ([NSThread isMainThread]) {\
block();\
} else {\
dispatch_sync(dispatch_get_main_queue(), block);\
}

#define dispatch_main_async_safe(block)\
if ([NSThread isMainThread]) {\
block();\
} else {\
dispatch_async(dispatch_get_main_queue(), block);\
}

#endif /* PrefixHeader_pch */
